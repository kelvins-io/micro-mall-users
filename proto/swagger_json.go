package proto

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _proto_ds_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x97\x41\x4e\xb3\x50\x14\x85\xcf\xe5\xa7\xbf\x44\x27\x0c\x8c\x31\x71\xc2\x16\xba\x03\x6c\x70\x01\xb6\x89\xd3\xda\x16\xa3\x26\x10\x48\x6b\x07\xce\x70\xe6\x5a\x9c\xb8\x01\x07\x4d\xdc\x88\x63\x57\x61\x1e\xef\x98\xd2\xb4\x0c\x48\x63\x40\x73\xbf\xa4\xfd\x06\xbc\x73\x79\x10\xe0\xbd\x0b\x40\x06\xcb\xb8\x0f\xf8\x00\x3c\x58\xbb\x87\xd8\x89\xc7\xdf\x16\x4e\x65\x80\x94\x35\x32\x8c\x91\x62\x82\x04\xc9\xee\x5a\x8a\xa2\x74\x08\xf3\xee\x1e\x23\xc5\x3d\x66\x98\x6f\xbc\xbf\x63\xe4\x98\xe0\xb1\xb4\x39\xf2\x80\x2c\xb9\xed\x8f\x66\x59\x9a\x97\x49\x79\x7d\x6b\x92\x4d\xb3\x28\x9a\x26\xd9\xd4\x9c\xf3\x6c\x32\xbc\x7a\x3e\x78\x3f\x6f\x96\x8f\xf7\xca\xe7\x77\xd5\xb9\x7f\x98\xff\x93\x9a\xec\x12\x0b\xdc\x60\x8e\x45\xed\xb5\xf7\x5e\x3e\x9b\xe6\xab\xd7\xff\x74\x39\x58\xfd\x1f\x96\xf3\x6f\x58\x23\xde\xbb\xc6\xc6\x7d\xe8\xad\xda\x7b\xf2\x94\xb6\x11\x2b\xef\xa8\xed\x89\x28\x8a\xd2\x39\xcc\xf7\x21\xa0\x43\xba\xb0\x16\x1e\x77\x68\xb7\x92\xf1\xe9\x80\x0e\xe9\xc2\x5a\x38\xce\xa1\x5d\xda\xa3\x7d\x3a\xa0\x43\xba\xb0\xe6\x47\x4b\xd8\x7c\x08\xcf\x2c\xec\x50\xc4\xa7\x03\x3a\xfc\x99\x7b\xa3\x28\xbf\x9d\x7f\x56\xbe\x59\xff\x2f\xea\xfb\x7f\x45\x51\xfe\x30\xe2\x46\xa3\x68\xb0\x6e\x08\xb6\x70\xb8\x11\xb8\xfe\x0e\xd4\x6c\x04\x38\xd6\x2c\xc5\xa7\x58\x8f\xd5\x8d\x80\xa2\x74\x8c\xaf\x00\x00\x00\xff\xff\xdf\xba\xe9\x9f\x04\x18\x00\x00")

func proto_ds_store() ([]byte, error) {
	return bindata_read(
		_proto_ds_store,
		"proto/.DS_Store",
	)
}

var _proto_micro_mall_users_proto_license = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xc1\x6e\xdc\x3c\x0c\x84\xef\x06\xfc\x0e\x73\xcb\xff\x03\xdb\x45\x93\xde\xda\x53\xd1\x53\x80\x1e\x7a\xc8\x0b\xd0\x12\xbd\x66\x23\x8b\x2e\x25\xad\xbb\x7d\xfa\x82\xda\x34\x4d\x90\xde\x6c\x89\x1c\x0e\xbf\xd1\xaf\x24\x13\xbe\x4a\xe0\x5c\x78\x1c\xc6\xe1\xbf\x2f\xff\xe3\xee\xfd\xdd\x2d\x82\x49\xa9\x42\xb9\x9f\x3e\x2c\x52\x50\x74\xae\x3b\x19\x43\x0a\x36\xd3\xb3\x44\x8e\xb8\xa1\xf2\x4e\xca\xcd\x01\xbb\xd4\x45\x5b\x05\xe5\x0b\xf8\xe7\x66\x5c\x0a\xd4\x20\xeb\x96\x84\xe3\x38\xec\x64\x46\xb9\x5e\x8e\xc0\x7d\x46\x56\xf0\x99\x73\xc5\x2e\x29\xa1\x2e\x0c\x6a\x75\x51\x2b\x98\x18\x0b\xa7\x88\x24\x34\x25\xc6\xac\xd6\x25\x23\xad\x74\xe2\x32\x0e\x64\x52\x24\x9f\x30\x9b\xae\xbd\xb1\x15\x86\xce\xa8\x2f\x2d\x1e\xdd\xf4\x37\xb6\x55\x4a\x11\xcd\xee\xf8\xe4\xd3\x39\xa2\xaa\xeb\x69\x66\xff\xf2\xde\x57\x8d\xcf\xf3\xb6\x66\x9b\x16\x3e\x8c\x83\xe4\x90\x5a\xf4\x91\x41\xd7\x95\x2d\x08\x25\xd0\xb6\x25\x09\x54\x45\x73\x39\x80\xf2\x55\x37\x55\x36\x48\xed\xff\xc6\x51\x4a\x35\x99\x5a\x65\x48\x1d\x87\xd9\x98\xd3\xe5\x80\xd2\xa6\xef\x1c\xaa\x37\xb8\xfd\x59\x53\xd2\xdd\xe5\x8d\xbd\x3e\x74\xcd\x8f\xbe\xc0\xed\x11\x0f\x0b\x43\x4d\x4e\x92\xdf\xec\x88\xb5\x95\x8a\xac\xd5\x91\xad\x52\x8c\x1d\x3a\xfb\x92\x9f\x70\xd1\xf6\x7c\x3f\x0e\x00\x42\x22\x71\x5e\x54\xfb\xdd\x6e\x5a\xb9\xcf\xbf\xaa\x53\xfa\xcb\x0e\xf7\x73\xaf\x79\x03\xa7\x0b\x49\x06\x79\xfc\xb1\x85\xea\x9b\x83\xc2\x63\xd6\x3d\x71\x3c\xad\x1e\xa8\xe4\x2e\xfb\x54\x81\xa8\xa1\xf9\x79\x47\x85\x5d\x5b\x8a\x98\xae\x4a\xb4\x6d\xc6\x41\xc8\x53\x99\x5a\xf5\x90\x7c\x1b\xe3\x1f\x4d\x8c\xe3\x71\x1c\xee\x8e\xf8\xec\x4c\x39\xa2\x68\xb3\xc0\x38\xb3\x79\xa0\xe5\xba\xdc\xc4\xd8\x12\x49\x4e\x17\xac\x64\x8f\x1c\x41\x05\xa5\x85\xe5\x1a\xc9\x0b\x40\x7d\xe0\x6b\x48\x5e\x3b\xb1\x83\xff\x37\x86\x71\xf8\xe0\xfc\xaf\xae\x24\x30\x56\xba\xfc\xc1\x6d\xbc\xea\x99\xa3\x3f\x70\x7a\x32\xd8\xdf\xa3\xbf\x9c\x27\xa7\xcf\xe9\x8b\xe6\xe3\x38\xfc\x0e\x00\x00\xff\xff\x4b\x39\xd9\x60\x68\x03\x00\x00")

func proto_micro_mall_users_proto_license() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_users_proto_license,
		"proto/micro_mall_users_proto/LICENSE",
	)
}

var _proto_micro_mall_users_proto_users_users_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6d\x8f\xdb\xc6\xf1\x7f\x7f\x9f\x82\xd0\xff\xff\x32\xf5\xa5\x6e\xd1\x17\x7e\x47\x4b\x3c\x5b\xb0\x1e\x0e\x92\xce\xee\xa1\x30\x88\x3d\x72\xa5\xdb\x98\x0f\x32\x77\x79\xb6\x1a\x18\x38\x17\x8d\x6b\xa3\x4d\x1d\x20\x8e\xd3\x20\x6e\x62\xa3\x8d\x6b\xa0\x80\x1d\x20\x6e\x9d\x9c\xeb\xfa\xcb\x58\xf2\xf9\x5b\x14\x5c\x8a\x3a\x2e\xb9\xa4\xf8\x20\xdd\x51\x06\x17\x48\xe0\x23\xb9\xb3\xb3\xb3\xf3\x9b\x9d\x9d\xdd\x59\x7d\xbc\x26\x08\x15\x7c\x0d\x0c\x06\xd0\xaa\x9c\x11\x2a\xa7\x4f\x7d\x58\xf9\xc0\x79\x86\x8c\xbe\x59\x39\x23\x38\xef\x05\xa1\x42\x10\xd1\xa0\xf3\x7e\x68\x99\xc4\x5c\xd7\x91\x62\x99\xb2\x0e\x34\x4d\xb6\x31\xb4\xb0\xec\x3e\xa6\xff\x76\xff\x7f\x8a\x3e\xa1\xa4\x04\xa1\xb2\x07\x2d\x8c\x4c\xc3\x21\x30\xfd\xa7\x60\x98\x44\xc0\x90\x54\xd6\x04\xe1\x06\x6d\x50\x31\x0d\x6c\xeb\x10\x57\xce\x08\xbf\x71\x6b\x81\xe1\x50\x43\x0a\x20\xc8\x34\xd6\x3f\xc2\xa6\xe1\x7c\x7b\x99\x7e\x3b\xb4\x4c\xd5\x56\x12\x7e\x0b\xc8\x2e\x3e\xea\xc9\xfa\xde\xcf\x29\x87\xeb\x40\x51\x4c\xdb\x20\xeb\xca\x2e\xb0\x06\x70\xf6\x81\x53\xc3\x26\xbe\x3f\x1d\xf9\xd8\xba\x0e\xac\x91\xc3\xfe\xdb\x7b\x4f\x26\xb7\x5f\x1c\x3e\x7f\x3c\xb9\xfd\x62\xfc\xc9\x27\xe3\xfd\xff\x4c\xfb\x48\x3f\x34\x87\xd0\xa2\x3c\xd4\x55\xe7\xe3\x2d\x47\x12\x5d\x68\xed\x21\x05\xca\xce\x1f\xa2\xdb\x66\xd5\x6d\xd2\x57\xd1\x82\x78\x68\x1a\x18\x62\xa6\x61\x41\xa8\x9c\xfe\xf0\xc3\xc0\x23\x41\xa8\xa8\x10\x2b\x16\x1a\x92\xa9\x48\x45\x01\xdb\x8a\x02\x31\xee\xdb\x9a\xe0\x51\x3a\xe5\x23\xef\x76\x42\xd9\x85\x3a\x08\x11\x13\x84\xca\xff\x5b\xb0\xef\xd0\xf9\xbf\x75\x15\xf6\x91\x81\x1c\xba\xd3\x61\x0c\x31\xdd\x99\x92\xaf\x30\x44\x6e\xf8\xfe\xba\xe1\x6f\xb7\xa2\xc2\x3e\xb0\x35\x32\xbf\x0f\x86\x60\x1b\xf0\xfa\x10\x2a\x04\xaa\x02\xb4\x2c\xd3\x5a\x5c\x57\x2c\xdb\x20\x48\x87\x92\x43\x35\x86\xf1\x35\x4e\x17\x2a\x43\x60\x01\x1d\x12\x68\x1d\x29\x9b\x5b\x02\xfd\x31\x80\x4e\x01\xb2\x63\xaa\xa3\x20\xbf\xc8\x88\x7a\x63\xc1\xab\x36\xb2\xa0\xa3\x2d\xc4\xb2\xe1\x92\x86\xec\xaa\x0d\x31\x49\xd2\xf1\xcb\xbe\x8e\x13\x30\x08\x76\x99\x51\xe8\x23\x7a\x97\xd7\xfc\x74\xa6\xc2\x3b\x02\x1a\xbc\x8e\x30\x59\x1f\xee\x9a\x06\x83\xb2\x01\x8c\x46\xd9\xe4\x6f\xfb\x93\x6f\xbf\x73\xb1\x36\xf9\xcb\xb3\xf1\x67\x8f\x27\x3f\x3c\x19\xdf\xfa\xd3\xcf\x26\x77\xfe\x38\x79\x70\x30\xbe\xfb\x22\x29\xea\xaa\xbb\x50\xb9\xe2\x3c\x39\x3b\xda\xa4\x1c\xac\x00\xe8\x82\x3c\x97\x98\xf3\x4a\x04\xe6\xa8\xb2\x5b\x23\x59\x31\x55\xc8\xc7\xde\x55\x1b\x5a\x71\xe0\xeb\x03\x0d\x07\xd1\x47\x46\x43\x4a\x1d\x13\x0b\x19\x83\x4a\x94\xb8\x23\x78\x1a\x06\xb4\x6d\x79\xcc\x2c\x17\xbd\x48\x85\x06\x41\x64\x94\x05\xba\x87\x07\xff\x7c\xf3\xf2\x55\x6a\xa8\xd6\xbd\x26\x57\x09\xab\x1e\xd3\x25\x58\xbd\x52\x82\x35\x23\x33\xd7\xd4\xf7\xc1\x6e\xf8\xd7\x0f\x73\x6c\xc6\xe1\x9f\x5f\x8c\xef\xde\x77\x6d\xc6\x9b\xd7\x8f\x26\x37\x9f\x25\xb5\x19\xe7\x20\xa1\xe0\x73\x1a\x5b\x01\x6b\xe1\x63\xb7\xb4\x13\x5e\x89\x80\x81\x8d\x96\x07\x83\xc0\xdb\xbe\x69\xe9\xc0\x11\x6d\x05\x19\xe4\x57\xbf\x3c\x66\x94\x78\x2b\x51\x19\xa9\x59\x00\x33\xad\x5d\x57\x53\x62\x46\xe4\xd5\x2b\x38\x70\x66\x3c\x97\xe8\xf1\x4a\x34\x7a\x64\x0d\x61\xb2\x78\x08\x01\xcb\x02\xe1\x15\x2e\x81\x7a\x50\x67\x84\xb9\xc0\x8b\x87\x5e\x60\x0c\x69\x88\x48\xd3\xa0\xe2\x08\x73\x63\x56\x4d\xb7\x35\x82\x8e\x1b\xb1\x8a\xe3\xf5\x65\x5a\xcc\xde\xfb\xf7\xe1\xf3\x7f\x8c\x1f\x7c\x3f\xfe\xeb\x7e\x6a\xbf\xb8\x06\x35\xb4\x07\xad\xd1\xaa\xcc\x76\x5c\xc6\x4b\xe4\x7a\xa5\xd8\xf3\x5e\x02\x47\x55\x9d\x0e\xab\x8c\x54\x5c\x14\x3b\x83\x0c\x02\x07\xd0\x9a\x63\x68\x7e\x71\x7a\x45\x0c\x8d\x27\xe2\x2c\x8e\x81\x6b\x6b\x32\xf9\xd3\xab\x66\x69\x38\x6c\x97\x76\xc6\x2b\x2b\x6f\x67\x9c\x21\x96\x7d\xc6\x66\xf1\x6c\xf3\xad\x46\x9c\xcd\x58\x18\xf8\xbd\xda\xb1\xbb\x4e\x6f\x5e\x3f\x9d\xdc\xfb\x29\x3b\xac\x9b\xa6\x8a\xfa\xa3\x55\x44\x36\x9f\xf3\x12\xdc\x5e\x29\xea\x2e\x54\xd4\xb8\x9d\xec\x56\x14\x9d\x53\xfb\xc8\x48\xbc\xd0\x9e\x7c\xfb\xdd\xe4\xce\x7f\xb3\x44\xa6\x36\x90\xa1\xae\x52\x68\xca\xcf\x6f\x09\x2f\xaf\x94\xab\xeb\x13\x70\x7a\x91\xb1\x87\x08\x74\x37\x08\x92\xe2\xf4\xe1\x4f\x93\x4f\x9f\xbe\xfb\xdd\xfe\xe1\xb3\x17\x6f\x1f\xde\x74\xdd\x60\xf7\xcf\x37\x07\x07\x19\xa2\xc9\x67\x47\x75\xca\x45\x95\xdd\xa5\x28\x2c\x7c\xa7\xac\xfb\xd9\x2e\x51\xec\x95\x08\x14\xfb\xf5\xec\xfd\xd8\x70\x59\xa7\x46\x29\x21\x66\xc6\xb7\xbf\x3c\x7c\xf4\x64\x72\x67\x7f\xf2\xe0\x8e\x3b\xc3\x25\xc5\x49\x03\xe1\x95\xda\x76\xf1\xf3\x5b\xa2\xc2\x2b\x51\xdb\x8f\x60\x00\x65\x1d\x12\x70\x8a\xfe\xcb\xb0\xf5\x42\xac\xb7\x92\x6c\x9c\xb2\x9c\x63\xf4\xdb\x25\xe0\x7a\x39\xac\x13\xf3\x0a\x34\xde\x17\x23\x94\xea\xa8\x57\x78\xef\x37\xfd\x21\x2f\x66\xde\x5e\x99\x63\x5e\x61\xae\x4b\xdb\xe4\x95\xf2\xec\xc8\xb1\x43\x57\x33\x07\x94\xeb\x64\xc7\xa0\xbf\x7a\x39\x7e\xf5\x45\x62\x7f\xc1\x21\xed\x3c\x59\x05\x58\xce\x98\x2d\xd1\xe8\x95\xa2\x06\x99\x7c\x43\x75\xb2\x71\x25\x1d\x5a\xca\x2e\x30\x08\x5e\x07\x18\x9b\x0a\x02\x04\xae\xe3\x5d\x73\x28\xef\xd8\x18\x19\x10\xe3\xa4\xb8\x1a\x7f\x71\x8b\x26\x16\xfc\x70\x78\xf3\xde\xf8\xe0\xcb\x77\x9f\xc7\xad\x5d\x9b\x5e\xab\xb3\x30\xaf\xf7\x40\xf4\xb8\xe8\xee\x9a\xc3\x55\x00\x1d\x9f\xf3\x12\x81\x5e\x29\x2a\x02\xa3\xc6\x6d\x61\x70\x0c\xea\x78\x16\x48\xda\x2a\x22\x89\x01\xf8\xf4\xd1\xe4\xe1\x8f\x2e\x0c\x3f\x38\x7c\x7d\x6f\xfc\xf5\x37\xee\xa3\xb7\x2f\x3f\x9f\x7c\xf3\x20\x13\x1a\x9b\x80\x40\x0b\x01\x4d\xa4\x8c\xac\x12\x1a\x19\xce\x4b\x34\x7a\xa5\xf0\x68\x0c\x8c\x5b\x91\xd0\xa8\x4f\x59\x4b\xb7\x3e\x74\x01\x79\xf8\xaf\xdf\x4f\xee\x7f\x95\x06\x83\xe7\x20\x09\x09\x65\x15\x10\xc8\xe3\xbb\xc4\x9f\x57\x22\xf0\xe7\xa9\xd6\x52\x8e\x08\x2c\xf1\xe4\x70\x02\x54\x1d\x9d\x12\x30\xf1\x3c\xef\x71\x72\xf7\xb3\x37\x07\x7f\x4f\x8f\x95\x95\x04\x4a\x89\x92\xd5\x9f\xa5\x8a\x30\x41\x0d\x01\xc6\xd7\x4c\x4b\x5d\xb7\x20\x86\x89\xbd\xc5\x77\x7f\xf8\xf4\xed\xab\xa7\x6e\x30\x64\xfc\xec\xd6\xdb\x87\x37\x93\x86\x44\x36\xa7\xed\x75\x68\x73\x2b\x00\x34\x86\xe1\x12\x64\x5e\x29\x2a\xc8\x02\xc3\x75\xb2\xe1\x11\x0b\x0e\x10\x26\xf4\x82\x89\x8f\x13\x4d\x64\x6e\xb6\x77\xba\x4d\xc9\x8e\xd7\xc8\x0a\x80\xc9\xe3\xb5\xc4\x91\x57\x8a\x8a\xa3\xa3\x91\x3a\x59\x08\x61\x02\x08\xcc\x9e\x77\x92\x3a\xd7\xa4\xeb\xb4\xb7\x0a\x50\x62\x39\x2e\x01\xe5\x95\xf2\xe4\xda\xf1\x9e\x5c\x73\x01\x9a\x6a\x13\x6d\xf2\xf5\xf3\xc9\xfd\xef\x5d\x80\xba\x3e\xe4\x64\x3f\xb1\x03\xb9\x35\x54\x01\x81\xce\x23\xba\x0b\xb2\x32\x78\xe5\xf1\x5d\xa2\xd6\x2b\x45\x9d\x06\xf9\xa3\x76\xbc\x53\xe2\xec\xa6\x30\x1f\x77\xb3\x6e\xb8\x17\x93\xed\xd8\x7d\xd1\x60\x92\xa5\x3c\x3b\x63\xee\x7c\x04\x95\x23\xab\xe7\x7c\x3e\x84\x16\x41\x01\x7c\xd0\xef\x65\xdb\xd2\x82\xa8\x89\xda\x96\xf7\x8f\xea\x1e\xd0\x6c\x38\xa7\x22\xa3\xc7\x47\x46\x6e\x67\x44\x7c\x1d\xbf\xc1\x35\x35\x8c\xc2\xe5\xe8\x22\x0c\x10\x48\xdc\xbf\xc0\x81\x5c\xa6\x1e\xef\x58\x54\xf4\xa1\x28\x3f\x55\x1d\x62\x0c\x06\xf3\xe4\xc6\xad\xaa\x42\x02\x90\x16\xb2\x70\xd1\x33\x52\xc4\x7c\x14\xa1\xf9\x7e\x95\xe2\x43\x9a\x3b\x4e\x14\x30\xd3\x4c\xf5\x9e\xcb\x4a\x68\xac\x02\xda\x50\x81\x86\xad\x33\xa0\xa8\x6c\x4a\x9d\x6e\xbb\x25\x36\xfc\x36\xbd\xda\x6e\x6e\x8a\xad\x6d\xff\xa3\xee\x76\xb7\x27\x35\x3d\xf6\x66\x38\xf3\x99\xc8\x23\x4a\x61\x2e\x23\x6f\x9a\xca\xa1\x5e\x8a\xa9\xeb\xa6\x11\x1c\x93\x38\x0f\x8e\x56\x08\xcf\x01\xfe\x91\x46\x58\xa6\xd7\x88\x45\x0d\xf5\x8e\x69\x6a\x10\x18\xf3\x20\x94\x20\x2d\xb9\x10\x3d\x4f\xc0\x7c\xe8\xbe\xa1\x55\x61\x9c\x9d\xf1\x8b\xce\xb5\x89\x8c\xec\x18\xae\xb2\x58\xdd\xea\xd6\x62\x81\xea\x7c\xce\x63\x81\xe1\x3a\x97\xc0\xc2\xf6\x3b\x76\xe9\x4b\x68\xf6\x03\xdf\x6a\xe3\x41\x62\x8b\x1d\x2d\x5e\x49\x07\x48\xcb\xd7\x25\x83\x40\x23\xd2\x2c\xa4\x60\x85\x9b\xff\x54\x08\xed\xf4\x9b\x41\xa3\x6f\xca\x5a\x8c\x1d\xcc\x3b\xe5\xcd\x6e\x90\x74\xc4\xd0\x04\xc8\x48\x3d\xf1\xc5\xee\x5c\x16\x51\x9e\x29\x48\x86\x3a\x46\x13\x20\x12\x4a\x85\x7f\x7f\x4d\x11\x25\x72\x3c\x1a\xe6\xc9\x82\x11\x61\x72\x25\x8b\xcc\x76\x2a\xa2\x44\x53\x90\x9c\xe5\xd5\xa4\x90\x43\x71\x1d\x99\x13\xd1\x2c\x26\xc7\x3d\xa3\x6a\xf1\x4e\xe5\x17\x51\xa2\x4b\xd6\xac\xc2\x6b\xd4\xb2\xfa\x5f\xc7\x35\xd7\x31\xcb\xee\xfd\xd5\xa4\x0d\x71\xab\xd1\x93\x7b\xdb\x9b\x92\xbc\x21\x36\xba\x92\xdf\x19\x64\xde\xf6\x3a\x5b\x52\xac\x6b\xc8\xa1\x15\xe6\x99\x9b\xe6\x56\xb4\x41\xa3\x97\x79\x1c\x8f\x2d\x68\x9a\x3b\x48\x83\x6e\x3e\x50\x5a\x33\x40\xc3\x5c\x67\x47\xde\x36\x6a\x1e\x31\xd2\x98\xb0\x7c\x85\xbd\x75\x60\x1e\xef\xb4\xfd\xcd\x6b\xea\x05\xa7\x1a\x57\x90\x30\xe0\x3b\xcf\xa3\xe8\xfa\xda\x5c\x52\xc1\x84\xad\x4c\x82\x65\x08\x5e\x0b\xf5\x35\x83\x4b\xce\xc8\x20\x13\x04\x9b\xed\xb3\xf5\x86\x24\x6f\x9e\x6f\xb7\x18\xf0\x49\x4d\xb1\xde\x88\x05\x1c\x53\x33\x82\xb5\x1e\x4d\xda\xcb\x13\x6c\x0c\x10\xc8\x25\xa8\x1c\xa1\xa6\x4b\x35\xbf\x70\x2e\x4a\x9d\xfa\xc6\xb6\x5c\x6d\xd7\x18\x99\xf5\xda\x17\xa4\x56\x7c\xa0\xe9\x52\x2d\x4a\x54\xfe\x24\x8d\xdc\x50\x22\x6c\x4f\xe7\x69\xeb\x91\x74\x92\xea\xea\x3c\x62\x3e\xbb\xc0\x25\xb9\x07\x2d\xd4\x1f\x05\x2f\x30\x48\x44\xfa\x22\xad\x1a\xbd\xee\xe6\xaa\xcc\xdc\xce\xd3\x4a\x89\x35\x89\x49\x7e\x2a\xda\xfc\xe1\xdd\x47\x2e\x2f\x14\x3c\x3e\xb1\xe7\xe8\xf0\xc2\xed\x68\x8c\x22\x65\xe8\x69\x7c\xb2\x46\x8e\x7e\xfb\x0f\xde\x66\xda\xfe\x08\xec\xf1\xfa\x45\x40\xd3\xa8\x96\x40\x17\x61\x79\x96\xab\xb5\x88\xa8\xf2\x9c\x0c\xa6\x42\xc0\x28\x01\xf7\xdc\xcc\x81\x82\xaa\x06\x4d\xec\x91\xed\x25\x50\x76\x44\xbe\x98\xb0\xe2\x9c\x54\x9a\x42\xa8\x85\x1f\x6d\x24\x06\x0e\xd9\xf7\xf8\xd2\xca\xd3\x57\xd5\x80\xd7\x89\xbc\xbc\x91\x46\x58\x36\xf7\x60\xe4\x76\x68\x26\x0b\xc0\x44\x07\x73\x8c\xf0\x32\xfa\xbb\x4c\x3c\x7a\xc7\x3c\x65\xa0\xaa\x99\x36\x98\x77\x21\xd0\xc8\xae\xac\x00\x4b\x95\x8d\xd0\xd2\x3e\x09\x05\xce\xaf\x95\x08\x8b\x51\xe1\x25\x21\x83\x80\xeb\x79\xfa\xab\x58\x10\x10\x28\x13\xa4\x67\xda\x40\xb7\xe9\xb1\x8e\x74\xd5\x53\x00\x60\x01\xf3\xc7\x82\x23\xf4\xbe\xbe\xcf\x0e\x57\xa5\x5d\x4f\xb4\xbd\x8a\x81\x35\x45\x2a\xc1\x14\xd4\xfe\x2f\xdc\x3c\xc4\x08\xc5\xe7\xfc\xe6\x12\x83\xef\x4a\x90\x0c\x10\xe0\xfa\xec\x59\x94\x3f\xf6\xc2\xcb\x1c\x1d\x5c\xb8\x9e\xe6\x8b\xa0\xf2\x83\xeb\x8c\x51\x39\x0e\xdd\x89\xbd\x15\xb6\x10\xa8\x8a\xe6\x7e\x36\x30\x4d\x48\x40\x3e\xd5\x58\x8a\x4f\xe4\x2c\xb8\x86\x59\xb0\x64\x0e\xe5\xa1\x06\x88\xd3\x48\xc6\xea\x2a\xa4\x47\x00\xf3\xc3\x91\x55\xfe\x6c\xa7\x37\x3a\x92\xd8\x63\x42\x60\x5b\x9b\xb5\xc0\x93\x9a\xd4\x90\xd8\x27\xe2\x56\xad\xde\x8b\x3f\xe6\xe1\xd2\x0d\xf3\xbc\x09\x06\x30\xaf\x4a\xcc\xee\x6c\x5b\xb8\xa7\x72\x74\xa7\xda\x62\x48\x47\x8f\x1d\x37\x77\xa9\x60\x7e\xf4\x62\x22\xdc\xfc\xa4\xba\x82\x9b\xaf\x60\x4a\x4c\x9e\x91\xc1\xd0\x92\xa7\x87\x9c\x53\x9b\x0b\x0c\xaf\x2f\x63\xa5\x7a\x9c\xee\xc4\xbc\xed\x9c\x44\x62\x58\xce\xc2\x04\xa9\xb9\xd6\x61\xf4\x5c\x86\x45\x7f\x1d\x7a\x09\xd1\x19\x83\x00\x85\x64\x5e\x66\xc6\x9c\x36\xce\x63\x1e\x43\x3b\x85\xf1\x0c\x25\x01\x58\x91\x0c\x02\xb3\xd0\xc7\xe1\xf4\x8b\x84\xf9\x8e\x4e\xc5\x94\x42\x60\xdb\xca\xb0\x84\xe4\x5d\x27\x9d\x7d\x70\x48\xd4\x36\xc1\x7c\x97\xa2\xbb\x55\xad\x4a\xdd\x2e\xb3\x15\xd9\xe9\xb4\x3b\xec\x29\x51\xa9\x23\xb7\xda\x3d\x59\xfa\x75\xbd\xdb\x0b\xbd\x09\x3d\x6d\x4a\x9d\xea\x79\xb1\xd5\xe3\xd7\x99\xbd\x0d\xbd\x11\xab\xd5\xf6\x56\xdc\x8b\x68\x1e\x36\x2f\xd5\xe8\xdb\xa6\xd8\xab\x9e\x0f\xbd\x6d\xb4\xcf\xd5\x5b\xf4\xbd\xd8\x68\xb4\x2f\x85\xde\xd7\xa4\x46\xfd\xa2\xd4\xd9\x96\xeb\xad\x8d\x76\x44\x0b\xec\x37\x5c\x4e\x7a\x1d\xb1\xd5\x15\xab\xbd\x7a\xbb\x25\x6f\x88\xf5\x86\x54\xe3\x75\xa2\xd1\xae\x5e\xe0\x3d\xaf\xb7\x2e\x8a\x8d\x7a\x2d\xd4\x70\xf5\xbc\xd8\x39\x27\xc9\x9d\xad\x56\xd4\x2b\xce\x18\xfa\x5f\xf7\x3a\x62\x4d\x92\x5b\x6d\x59\x6a\x6e\xf6\xb6\x43\x5f\x75\x7b\x62\x4f\xa2\x1d\x72\xb7\x59\x63\x3d\x45\xaf\xa9\xb0\x16\xc6\xe5\xe3\x14\xcc\x53\xe2\xce\x4f\x73\x16\x99\xbe\x94\xb6\x24\x98\x8c\xcd\x29\x2b\x84\xf1\x8c\xe1\x3d\xea\xe7\xda\xf3\x0d\xe3\x82\x4e\xd7\x2c\xe0\xf6\x1b\x66\xe6\x9d\xfe\xd2\x65\xca\x48\x86\x3f\x99\x26\xc2\x23\x48\x7f\x2c\x60\x76\xb4\x9f\xcf\xa9\xee\xb4\x98\x69\x15\x6b\x13\x99\x58\x40\x85\x19\x5d\x27\x73\x48\xef\xb0\xce\x12\xe8\xa1\x8b\xc7\x8c\x4a\xb7\x72\x68\x29\xe2\xee\x0a\xf7\x97\x5c\xe3\x47\x3e\xbe\xaf\x4c\xb4\x2d\x8f\x0f\xb4\xf8\xbe\xce\x7e\x90\x2b\x81\x8f\xcf\x25\xa0\xd3\x00\xb0\x9c\x79\xc5\x04\x2c\x18\x42\x49\xf2\xac\x41\xa8\xca\x59\x09\x68\x60\x07\x46\x2e\xd5\x32\xdb\xd6\xb9\xc6\x13\x61\x99\x9f\xf8\x1c\x87\x31\xf6\x1c\x6b\x52\xb5\x7b\x4f\xb0\xe5\x0f\x4a\x97\x91\x06\xef\x9b\xf7\x32\xd2\xb0\xf8\x83\x01\xd3\x08\x46\xd6\xe1\x29\x64\x90\xa2\x50\xdb\xc5\x4c\x9a\x59\xc1\x8c\x4d\x56\x4b\x71\x62\xa0\x5e\x8a\xba\x38\xba\xcb\x5e\x5e\x9e\x6c\xac\x67\x43\x46\x10\xd1\xe8\xa7\xd3\xdf\xf7\xf8\xf1\xe5\xe1\xe3\x9b\xd3\xdf\xd1\xe3\x2b\x84\x6f\xe5\x97\xcb\x15\x4d\x97\x16\xea\xeb\x73\x02\xe5\x4e\xa8\x4e\xac\xe6\xaf\x39\xff\xdd\x58\xfb\x5f\x00\x00\x00\xff\xff\xce\x8e\xae\xbd\x70\x8f\x00\x00")

func proto_micro_mall_users_proto_users_users_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_users_proto_users_users_swagger_json,
		"proto/micro_mall_users_proto/users/users.swagger.json",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"proto/.DS_Store": proto_ds_store,
	"proto/micro_mall_users_proto/LICENSE": proto_micro_mall_users_proto_license,
	"proto/micro_mall_users_proto/users/users.swagger.json": proto_micro_mall_users_proto_users_users_swagger_json,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"proto": &_bintree_t{nil, map[string]*_bintree_t{
		".DS_Store": &_bintree_t{proto_ds_store, map[string]*_bintree_t{
		}},
		"micro_mall_users_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"LICENSE": &_bintree_t{proto_micro_mall_users_proto_license, map[string]*_bintree_t{
			}},
			"users": &_bintree_t{nil, map[string]*_bintree_t{
				"users.swagger.json": &_bintree_t{proto_micro_mall_users_proto_users_users_swagger_json, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
