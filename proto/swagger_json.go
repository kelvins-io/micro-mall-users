package proto

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _proto_micro_mall_users_proto_users_users_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6d\x8f\xdb\xc6\xf1\x7f\x7f\x9f\x82\xd0\xff\xff\x32\xf5\xb9\x6e\xd1\x17\x7e\x27\x4b\x3c\x5b\xb0\x1e\x0e\x92\xce\xae\x51\x18\x04\x8f\x5c\xe9\x36\xe6\x83\xbc\xbb\x3c\x5b\x08\x0c\xd8\x45\xe3\x26\x68\x53\x07\x88\xe3\x36\x88\x9b\x38\x68\xe3\x06\x28\x60\x07\x88\x5b\x27\xe7\xba\xfe\x32\x96\x7c\xfe\x16\x05\x97\x94\x8e\x4b\x2e\x9f\xa5\x3b\xd2\xe0\x02\x36\x4e\x24\x77\x76\x76\x76\x7e\xb3\xbb\xb3\x33\xe4\x07\x1b\x82\x50\xc3\x37\xe4\xf1\x18\xa0\xda\x59\xa1\x76\xe6\xd4\xe9\xda\x7b\xf6\x35\x68\x8c\xcc\xda\x59\xc1\xbe\x2f\x08\x35\x02\x89\x06\xec\xfb\x13\x64\x12\x73\x53\x87\x0a\x32\x25\x5d\xd6\x34\xc9\xc2\x00\x61\xc9\xb9\x4c\xff\x76\xfe\x3f\x45\xaf\x50\x52\x82\x50\xdb\x07\x08\x43\xd3\xb0\x09\xb8\x7f\x0a\x86\x49\x04\x0c\x48\x6d\x43\x10\x6e\xd1\x06\x15\xd3\xc0\x96\x0e\x70\xed\xac\xf0\x1b\xa7\x96\x3c\x99\x68\x50\x91\x09\x34\x8d\xcd\xf7\xb1\x69\xd8\xcf\x5e\xa5\xcf\x4e\x90\xa9\x5a\x4a\xc2\x67\x65\xb2\x87\x8f\x7a\xb2\xb9\xff\x73\xca\xe1\xa6\xac\x28\xa6\x65\x90\x4d\x65\x4f\x46\x63\xb0\x7c\xc0\xae\x61\x11\xcf\x4f\x5b\x3e\x96\xae\xcb\x68\x6a\xb3\xff\xe6\xfe\x77\xf3\x8f\x9e\x1f\x3e\x7b\x3c\xff\xe8\xf9\xec\xc3\x0f\x67\xb7\xff\xe3\xf6\x91\x3e\x68\x4e\x00\xa2\x3c\xb4\x54\xfb\xe1\x1d\x5b\x12\x03\x80\xf6\xa1\x02\x24\xfb\x47\xdd\x69\xb3\xe1\x34\xe9\xa9\x88\x00\x9e\x98\x06\x06\x98\x69\x58\x10\x6a\x67\x4e\x9f\xf6\x5d\x12\x84\x9a\x0a\xb0\x82\xe0\x84\xb8\x22\xad\x0b\xd8\x52\x14\x80\xf1\xc8\xd2\x84\x05\xa5\x53\x1e\xf2\x4e\x27\x94\x3d\xa0\xcb\x01\x62\x82\x50\xfb\x7f\x04\x46\x36\x9d\xff\xdb\x54\xc1\x08\x1a\xd0\xa6\xeb\x0e\x63\x80\xe9\xbe\x4b\xbe\xc6\x10\xb9\xe5\xf9\x75\xcb\xdb\x6e\x4d\x05\x23\xd9\xd2\x48\x7c\x1f\x0c\xc1\x32\xc0\xcd\x09\x50\x08\x50\x05\x80\x90\x89\x96\x5d\xc9\xdb\x13\x64\x19\x04\xea\x40\xb4\x89\x46\xf0\xbd\xc1\xe9\x41\x6d\x22\x23\x59\x07\x04\xa0\x23\x5d\x73\x8a\xaf\x3b\x86\xac\x53\x7c\xec\x9a\xea\xd4\xcf\x2f\x34\xc2\xee\x20\x70\xdd\x82\x08\xd8\xca\x42\x90\x05\xd6\x34\x62\xd7\x2d\x80\x49\x92\x8e\x5f\xf5\x74\x9c\xc8\x63\x7f\x97\x19\x7d\x3e\xa2\x77\x75\xc3\x4b\xc7\x15\xde\x11\xce\xc0\x4d\x88\xc9\xe6\x64\xcf\x34\x18\x90\x8d\x41\x38\xc8\xe6\x7f\xbb\x3d\xff\xfa\x5b\x07\x6a\xf3\xbf\x3c\x9d\x7d\xfa\x78\xfe\xc3\x77\xb3\xbb\x7f\xfc\xd9\xfc\xe3\x3f\xcc\x1f\x1e\xcc\xee\x3d\x4f\x0a\xba\xc6\x1e\x50\xae\xd9\x57\xce\x4d\xb7\x29\x07\x25\xc0\x9c\x9f\xe7\x0a\x72\x6e\x09\x81\x1c\xd5\x75\x34\x95\x14\x53\x0d\xf0\xed\x40\xef\xba\x05\x50\x14\xf6\x46\xb2\x86\xfd\xe0\x23\xd3\x09\xa5\x8e\x09\x82\xc6\xb8\x16\x26\xed\x10\x9e\x26\x3e\x65\x5b\x1f\x33\xeb\x05\x2f\x54\x81\x41\x20\x99\x66\x41\xee\xe1\xc1\x3f\x5f\xbf\x78\x99\x1a\xa9\xad\x45\x93\x65\x82\xea\x82\xe9\x0a\xab\x6e\xa9\xb0\x9a\x91\x99\x1b\xea\xbb\x60\x36\xbc\x9b\x87\x18\x93\x71\xf8\xa7\xe7\xb3\x7b\x0f\x1c\x93\xf1\xfa\xd5\x37\xf3\x3b\x4f\x93\x9a\x8c\xf3\x80\x50\xec\xd9\x8d\x95\xc0\x58\x78\xd8\xad\xcc\x84\x5b\x42\x50\x60\xc1\xf5\xa1\xc0\x77\x77\x64\x22\x5d\xb6\x25\x5b\x83\x06\xf9\xd5\x2f\x8f\x19\x24\x8b\x5d\xa8\x04\xd5\x2c\x78\x71\x6b\xb7\xd4\x94\x90\xa9\xf3\xea\x15\x1c\x37\x4b\x9e\x2b\xf0\xb8\x25\x1c\x3c\x92\x06\x31\x59\x3d\x82\x64\x84\xe4\xe0\xee\x96\x00\xdd\xaf\x32\x42\x2c\xee\xa2\x91\xe7\x1b\x42\xea\x1d\xd2\x34\xa0\xd8\xc2\xdc\x5a\x56\xd3\x2d\x8d\xc0\xe3\x06\xac\x62\x2f\xf9\x32\x6d\x64\xef\xff\xfb\xf0\xd9\x3f\x66\x0f\xbf\x9f\xfd\xf5\x76\xea\x45\x71\x13\x68\x70\x1f\xa0\x69\x59\xe6\x3a\x2e\xe3\x15\x70\xdd\x52\xec\x59\x2f\xc1\x2a\x55\x75\x47\x55\x82\x2a\x2e\x8a\x99\x81\x06\x01\x63\x80\x62\xec\xcc\x2f\xce\x94\xc4\xce\x2c\x44\x9c\x65\x59\xe0\x98\x9a\x4c\x8b\xe9\xb2\x19\x1a\x0e\xdb\x95\x99\x71\x4b\xe9\xcd\x8c\x3d\xc2\x92\xc7\xd6\xac\x9e\x6d\xbe\xd1\x88\x32\x19\x2b\xc3\xfe\xa2\x76\xe4\x71\xd3\xeb\x57\x4f\xe6\xf7\x7f\xca\x8e\xea\x8e\xa9\xc2\xd1\xb4\x8c\xc0\xe6\x73\x5e\x61\xdb\x2d\x45\x3d\x7e\x0a\x1b\xb6\x93\x3d\x83\xa2\x33\xea\x08\x1a\x89\x37\xd9\xf3\xaf\xbf\x9d\x7f\xfc\xdf\x2c\x4e\xa9\x2d\x68\xa8\x65\xf2\x4a\x79\xf9\xad\xd0\xe5\x96\x6a\x67\x7d\x02\x2b\x5e\x68\xec\x43\x02\x9c\xa3\x81\xa4\x30\x7d\xf4\xd3\xfc\x93\x27\x6f\x7f\x7b\xfb\xf0\xe9\xf3\x37\x8f\xee\x38\x6b\x60\xe7\xe7\xeb\x83\x83\x0c\x7e\xe4\x73\xd3\x16\xe5\xa2\xc1\x9e\x4f\x14\x16\xbd\x2e\xeb\x5e\xb6\x2b\x10\xbb\x25\x04\xc4\x5e\x35\x7b\x37\x4e\x5a\xd2\x05\x57\x04\xcf\x5b\xd2\x87\x55\x30\x88\x29\x4d\x60\x45\x90\xeb\x0a\x2b\x6e\xa9\x8e\x6b\x8f\x1d\xb9\x9a\x39\xa6\x5c\x27\x0b\x3b\xfc\xe2\xc5\xec\xe5\xe7\x49\xe1\xd9\xb6\x49\xdb\x57\xca\x80\xca\x25\xb3\x15\x18\xdd\x52\xd4\xbd\x9d\x67\xa4\x4e\x76\x3b\xa7\x03\xa4\xec\xc9\x06\xc1\x9b\x32\xc6\xa6\x02\x65\x02\x36\xf1\x9e\x39\x91\x76\x2d\x0c\x0d\x80\x71\x52\x58\xcd\x3e\xbf\x4b\xe3\x78\x7f\x38\xbc\x73\x7f\x76\xf0\xe7\xb7\x9f\x45\xad\x19\x3b\x8b\x56\x97\xce\x95\xc5\x85\xfa\x82\x8b\xc1\x9e\x39\x29\x03\xe6\xf8\x9c\x57\x00\x74\x4b\x51\x01\x18\x36\x6c\x2b\x43\xa3\x5f\xc5\xb3\x20\xd2\x52\x21\x49\x8c\xbf\x27\xdf\xcc\x1f\xfd\xe8\xa0\xf0\xbd\xc3\x57\xf7\x67\x5f\x7e\xe5\x5c\x7a\xf3\xe2\xb3\xf9\x57\x0f\x33\x81\xb1\x23\x13\x80\xa0\xac\xd5\x29\x23\x65\x02\x23\xc3\x79\x05\x46\xb7\x14\x1e\x8c\xbe\x61\x2b\x12\x18\x75\x97\xb5\x74\x7b\x43\x07\x8f\x87\xff\xfa\xdd\xfc\xc1\x17\x69\x20\x78\x1e\x90\x80\x50\xca\x00\x40\x1e\xdf\x15\xfc\xdc\x12\x02\xbf\x85\x66\xad\xe5\x54\x6e\x8d\x91\x7a\x09\x40\x75\x74\x30\x67\xe2\xb8\xa5\xe3\xfc\xde\xa7\xaf\x0f\xfe\x9e\x1e\x2a\xa5\xc4\x49\x05\x92\xd2\xcf\x51\x45\x98\x9e\x26\x32\xc6\x37\x4c\xa4\x6e\x22\x80\x41\xe2\xa5\xe2\xdb\xdf\x7f\xf2\xe6\xe5\x13\xc7\x0f\x32\x7b\x7a\xf7\xcd\xa3\x3b\x49\xbd\x21\xdb\x6e\x7b\x7d\xda\x5c\x09\x70\xc6\x30\x5c\x61\xcc\x2d\x45\xc5\x98\x6f\xb4\x4e\xd6\x33\x82\xc0\x18\x62\x42\x53\xb9\x3f\x48\x34\x8d\x39\x89\x95\xce\x69\x40\x52\x40\xf5\x17\x8d\x94\x00\x4b\x0b\x5e\x2b\x18\xb9\xa5\xa8\x30\x3a\x1a\xa8\x93\x45\x10\x26\x32\x01\xd9\xa3\xbc\x53\x47\x76\x0f\xec\xf6\xca\x80\x24\x96\xe3\x0a\x4f\x6e\xa9\x42\x45\x8e\x37\x54\xc4\xc1\x67\xaa\xc3\xb3\xf9\x97\xcf\xe6\x0f\xbe\x77\xf0\xe9\x2c\x20\xe7\xb7\x13\xaf\x1e\x77\x26\xaa\x4c\x80\x7d\x89\x1e\x7f\x94\x06\xae\x3c\xbe\x2b\xd0\xba\xa5\xa8\x93\x20\x7f\xd0\x8e\x77\x42\x5c\xbe\x90\xc7\xc3\xdd\xb2\x1b\xce\xfb\x7f\x76\xad\x51\xdd\x60\x32\x13\x16\x66\xc6\xdc\x7d\x1f\x28\x47\x46\xcf\x7e\x7c\x02\x10\x81\x3e\x78\xd0\xe7\x25\x0b\x69\x7e\xd0\x84\x9d\xc6\x7b\x47\x75\x5f\xd6\x2c\x10\x53\x91\x51\xe3\x23\x1b\xb7\x3b\x25\x9e\x8e\xdf\xe2\x5a\x1a\x46\xe1\x72\x74\x11\xf8\x08\x24\xee\x9f\x2f\x00\x8e\xa9\xc7\x8b\x57\x0f\x8f\x56\xf7\x52\xd5\x01\xc6\xf2\x38\x4e\x6e\xdc\xaa\x2a\x20\x32\xd4\x02\x06\x2e\x7c\x42\x0a\x99\x8e\x42\x34\xdf\xab\x52\x7c\x48\x73\xc7\x89\x02\xc6\x4d\x0a\x1d\x3a\xac\x04\xc6\xca\xa7\x0d\x35\x60\x58\x3a\x03\x8a\xda\xb6\xd8\x1f\xf4\xba\xf5\xb6\xd7\xa4\x37\x7a\x9d\xed\x7a\xf7\x8a\xf7\xd2\xe0\xca\x60\x28\x76\x16\xec\x2d\x71\xe6\xb1\x90\x47\x94\x82\x5c\x86\xbe\xd1\x25\x87\x7a\x29\xa6\xae\x9b\x86\x7f\x4c\xa2\xd6\x6f\xb4\x42\x70\x0a\xf0\x8e\x34\xc4\x12\x7d\x5d\x4f\xd8\x50\xef\x9a\xa6\x06\x64\x23\x14\x5e\xee\xed\x24\x23\x17\x9d\x21\x58\x08\xc1\x24\x60\x3e\xf0\xde\x8f\xb2\x30\xce\xae\x07\x8a\xce\xb5\x09\x8d\xec\x10\x6f\xb0\x50\xde\x19\x34\x23\x71\x6c\x3f\xce\x63\x81\xe1\x3a\x97\xc0\x82\xe6\x3d\x72\x5f\x4c\x68\x30\x32\xdf\xa8\xe3\x71\x62\x83\x1e\x2e\x5e\x51\x97\xa1\x96\xaf\x4b\x06\x01\x46\xa8\xd5\x48\xc1\x0a\x37\x1b\xa1\x10\xda\xe9\xb5\x92\xc6\xc8\x74\x36\x77\x6b\x9a\x11\x97\x2f\x72\xb3\xc5\xd0\x91\xa1\x91\x7a\x5e\x8c\x3c\xd2\x2c\xa2\x3c\x53\x90\x0c\x74\x8c\xa6\xda\x24\x94\x0a\xff\x4d\x12\x45\x94\xc8\xf1\x68\xd8\x42\x16\x8c\x08\x93\x2b\x59\x68\xf2\x41\x11\x25\x9a\x82\xe4\x32\x83\x2b\x85\x1c\x8a\xbb\x90\x89\x91\xc3\xca\x95\x8a\xc9\x35\xcd\xa8\x55\xbc\x28\xfd\x32\x08\x73\xc5\x4a\x55\x3a\x65\x5a\x55\xff\x5b\xb8\xe9\xac\xc9\xb2\x2f\xfc\x9a\xe2\x56\x7d\xa7\x3d\x94\x86\x57\xb6\x45\x69\xab\xde\x1e\x88\xde\x75\x20\x73\x77\xd8\xdf\x11\x23\x57\x85\x1c\x5a\x41\x9e\xa9\xd3\xe6\xdc\x74\x71\x22\x98\x67\xbc\xa8\x83\x53\xba\xc6\xa6\xac\xc6\x09\x98\xb6\xbf\x7d\x43\xbd\x68\x57\xe3\x8e\x18\xf0\x2d\xf5\xe2\x28\x3a\x4b\x43\x2e\x29\x7f\xd2\x51\x1c\xa9\x8e\xb9\x0b\x35\xe0\x24\x0b\xf1\x09\xde\x08\xf4\x35\xc3\x0a\x92\x91\x41\x26\xb5\xe9\xf4\xce\xb5\xda\xa2\xb4\x7d\xa1\xd7\x65\x14\x46\xec\xd4\x5b\xed\x48\x25\x61\x6a\x86\xb0\x36\x34\xaf\x01\x23\x97\xeb\xcc\x47\x20\x97\xa0\x72\x38\x4e\x2e\x37\xbd\xc2\xb9\x24\xf6\x5b\x5b\x57\xa4\x46\xaf\xc9\xc8\x6c\xd8\xbb\x28\x76\xa3\xdd\x26\x97\x9b\x61\xa2\xf2\xa6\x1a\xe4\x86\x12\x61\x7b\x1a\xa7\xad\x47\xd2\x49\xaa\xab\x71\xc4\x3c\x76\x81\x4b\x72\x1f\x20\x38\x9a\xfa\xd3\x5f\x13\x91\xbe\x44\xab\x86\x6f\x13\xb9\x2a\x13\xdb\x79\x5a\x29\xb1\x26\x31\x19\x3c\x85\x9b\xa8\x5c\x37\x8d\xb4\x52\xf0\x78\xc4\x9e\xa3\xc3\x2b\xb7\xa3\x11\x8a\x94\xa1\xa7\xd1\x39\x07\x39\xfa\xed\x8d\x20\xcd\xe4\xcc\xf7\x1d\x58\x7a\x45\x40\x93\x81\xd6\x40\x17\x62\x69\x99\x71\x74\x0c\x3e\xd2\x98\x34\x9d\x42\xa0\x2c\x01\xf7\xdc\x00\xf9\x82\x6a\x0e\x4d\x5f\x91\xac\x35\x50\xb6\x45\xbe\x1a\x27\x59\x4c\xc2\x48\x21\xd4\xc2\x0b\x46\x12\x81\x96\xec\x07\x5a\x69\xe5\xe9\xa9\x6a\x80\x9b\x44\x5a\xdf\x48\x43\x2c\x99\xfb\x20\xf4\xec\x6f\x1d\x06\x82\x71\x85\xe5\x50\x80\x75\x88\x63\x9d\x70\x5d\xc4\x3b\x4a\xb2\xaa\x66\x3a\x6c\xdd\x03\xb2\x46\xf6\x24\x45\x46\xaa\x64\x84\x7a\x46\xa2\x28\x70\x5e\x91\x2f\xac\x46\xc3\xd7\x04\x1c\x22\xdf\xcc\xd3\x5f\x05\x01\x99\x00\x89\x40\x3d\xd3\x61\xb2\x45\x43\x1c\xd2\x55\x4f\x01\x80\x15\x4c\x2f\x2b\x76\x47\x7b\xfa\xbe\x8c\x33\x4a\xbb\x1b\xe9\x2d\x2a\xfa\x76\x24\xa9\x04\x53\xd0\xe9\x61\xe5\xe6\x21\x42\x28\x9e\xa5\x73\x2e\x31\x78\xde\x8a\x91\x01\x02\xdc\x15\x7f\x16\xe5\x8f\x7c\xd7\x5a\x8e\x0e\xae\x5c\x4f\xf3\xf9\x0c\xf9\xee\x64\xc6\xa8\x1c\x87\xee\x44\xbe\x8f\xb0\x10\xa8\x0a\xe7\x7e\x39\x30\x1d\x40\xe4\x7c\xaa\xb1\x96\x25\x93\xbd\x5d\x9b\x64\xc1\x92\x39\x91\x26\x9a\x4c\xec\x46\x32\x56\x57\x01\x0d\x87\xcb\x0f\x47\x56\xf9\xb3\x85\x2a\xf4\xc5\xfa\x90\x71\xa0\xed\x6c\x37\x7d\x57\x9a\x62\x5b\x64\xaf\xd4\x77\x9a\xad\x61\x74\x4c\x83\x43\x37\xc8\x33\x37\x79\xa5\x60\xeb\xc7\xd5\xf8\x85\xf9\x49\x55\x05\x87\xad\x3f\x29\x22\xcf\xc8\x60\x80\x24\x37\xd0\x35\x35\x4c\x30\xb8\xb9\x8e\x0d\xdc\x71\x4e\xa3\x71\x87\x20\x89\xc4\xb0\x9e\x05\x39\x54\x73\xed\x3f\xe8\xe1\x3b\xa2\x1f\xe2\x5c\x83\xd3\xc2\x20\xb2\x42\x32\x6f\xaf\x22\x22\x4e\xb3\xcb\x6b\x12\x3c\x5f\x8b\x66\x28\x09\xc0\x8a\x64\x10\x98\x0d\x2e\x0e\x46\xe0\x27\x4c\x78\xb3\x2b\xa6\x14\x02\xdb\x56\x86\xad\x13\xef\x15\x9e\xd9\x07\x87\x84\x39\xd7\xe3\xa7\xd2\xc1\x4e\xa3\x21\x0e\x06\xcc\x01\x5e\xbf\xdf\xeb\xb3\xa1\x80\x62\x5f\xea\xf6\x86\x92\xf8\xeb\xd6\x60\x18\xb8\x13\xb8\xda\x11\xfb\x8d\x0b\xf5\xee\x90\x5f\x67\x79\x37\x70\xa7\xde\x68\xf4\x76\xa2\x6e\x84\xf3\xb0\x7d\xb9\x49\xef\x76\xea\xc3\xc6\x85\xc0\xdd\x76\xef\x7c\xab\x4b\xef\xd7\xdb\xed\xde\xe5\xc0\xfd\xa6\xd8\x6e\x5d\x12\xfb\x57\xa4\x56\x77\xab\x17\xd2\x02\xfb\x0c\x97\x93\x61\xbf\xde\x1d\xd4\x1b\xc3\x56\xaf\x2b\x6d\xd5\x5b\x6d\xb1\xc9\xeb\x44\xbb\xd7\xb8\xc8\xbb\xde\xea\x5e\xaa\xb7\x5b\xd1\x41\x97\x8b\xd1\x0a\x2a\x41\x54\x4a\x44\xc1\x16\x2a\xdc\xe9\x21\x66\x6f\xe3\x49\x2a\x4a\x02\x89\xc8\xac\x9e\x42\xd8\xae\x08\xde\xc3\xbe\x4c\x9b\x6f\x18\x57\x14\x27\xb7\x82\x77\x8f\x30\x13\x9f\xfb\x5d\xaf\x94\x1b\x68\x6f\x3e\x43\xc8\x84\x9c\xfe\x2c\x7b\x19\x3e\xcd\xe7\x54\xb7\x5b\xcc\xb8\x79\xd2\xd9\xed\x64\x1c\x27\xec\x36\x34\xa3\xd2\x94\x4e\xdb\x8b\xe8\x94\xe7\x7e\x77\x2e\x7a\xe4\xa3\xfb\xca\x38\x69\xf2\x2c\x21\x56\xdf\xd7\xe5\x17\x44\x12\x2c\x91\xb9\x04\x74\xea\x37\x94\x32\x6f\x38\x64\x04\x02\x28\x49\x9e\x78\x05\x54\x29\x2b\x01\x4d\xde\x05\xa1\x3b\x9d\xcc\xb6\x31\xd6\xf8\x41\x2c\xf1\x53\x47\xa3\x30\xc6\x06\xfc\x25\x55\xbb\x77\x04\x5b\x5e\x5f\x66\xb5\x51\x5f\x3c\xf3\x4e\x6e\xd4\x57\x7f\xdc\xec\x3a\x00\xb2\x0e\x4f\x21\xf7\xf8\x85\x3a\x65\x64\x52\x71\x0a\x66\x6c\xb2\x5a\x8a\x13\x03\xf5\x5a\xd4\xc5\xd6\x5d\xf6\xbd\xcf\xc9\xc6\x7a\x39\x64\x04\x12\x8d\x3e\xea\x7e\x18\xe1\xc7\x17\x87\x8f\xef\xb8\x5f\xfe\xe1\x2b\x84\x67\xe7\x96\x6b\x29\x9a\x2e\x75\xce\xd3\xe7\x04\xca\x9d\xe9\xd4\x6b\xc3\xfe\x77\x6b\xe3\x7f\x01\x00\x00\xff\xff\x54\x29\x8f\xe7\x1a\x88\x00\x00")

func proto_micro_mall_users_proto_users_users_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_users_proto_users_users_swagger_json,
		"proto/micro_mall_users_proto/users/users.swagger.json",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"proto/micro_mall_users_proto/users/users.swagger.json": proto_micro_mall_users_proto_users_users_swagger_json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"proto": &_bintree_t{nil, map[string]*_bintree_t{
		"micro_mall_users_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"users": &_bintree_t{nil, map[string]*_bintree_t{
				"users.swagger.json": &_bintree_t{proto_micro_mall_users_proto_users_users_swagger_json, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}
