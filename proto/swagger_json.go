package proto

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _proto_micro_mall_users_proto_users_users_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6d\x8f\xdb\xc6\xf1\x7f\x7f\x9f\x82\xd0\xff\xff\x32\xcd\xa5\x6e\xd1\x17\x7e\x47\x4b\x3c\x5b\xb0\x1e\x0e\x92\xce\xee\xa1\x30\x08\x1e\xb9\xd2\x6d\xcc\x07\x79\x77\x79\xb6\x10\x18\xb0\x8b\xc6\x4d\xd0\xa6\x0e\x10\xc7\x6d\x10\x37\x71\xd0\xc6\x0d\x50\xc0\x0e\x10\xb7\x4e\xce\x75\xfd\x65\x2c\xf9\xfc\x2d\x0a\x2e\x29\x1d\x97\x5c\x52\x7c\x90\xee\x48\x83\x0b\x24\xf0\x71\xb9\xb3\xb3\xb3\xf3\x9b\x9d\x9d\xdd\xa1\x3e\xd8\x10\x84\x1a\xbe\xae\x8c\x46\x00\xd5\xce\x0a\xb5\x33\xef\xbe\x57\x7b\xc7\x79\x06\xcd\xa1\x55\x3b\x2b\x38\xf5\x82\x50\x23\x90\xe8\xc0\xa9\x1f\x23\x8b\x58\x9b\x06\x54\x91\x25\x1b\x8a\xae\xcb\x36\x06\x08\xcb\xee\x63\xfa\x6f\xf7\xff\xef\xd2\x27\x94\x94\x20\xd4\x0e\x00\xc2\xd0\x32\x1d\x02\xde\x3f\x05\xd3\x22\x02\x06\xa4\xb6\x21\x08\x37\x69\x87\xaa\x65\x62\xdb\x00\xb8\x76\x56\xf8\x8d\xdb\x4a\x19\x8f\x75\xa8\x2a\x04\x5a\xe6\xe6\xfb\xd8\x32\x9d\x77\xaf\xd0\x77\xc7\xc8\xd2\x6c\x35\xe1\xbb\x0a\xd9\xc7\xc7\x23\xd9\x3c\xf8\x39\xe5\x70\x53\x51\x55\xcb\x36\xc9\xa6\xba\xaf\xa0\x11\x58\xbc\xe0\xb4\xb0\x89\xef\x4f\x47\x3e\xb6\x61\x28\x68\xe2\xb0\xff\xfa\xde\x77\xb3\x8f\x9e\x1d\x3d\x7d\x34\xfb\xe8\xd9\xf4\xc3\x0f\xa7\xb7\xfe\xe3\x8d\x91\xbe\x68\x8d\x01\xa2\x3c\x34\x35\xe7\xe5\x1d\x47\x12\x7d\x80\x0e\xa0\x0a\x64\xe7\x0f\xd1\xed\xb3\xee\x76\xe9\x6b\x88\x00\x1e\x5b\x26\x06\x98\xe9\x58\x10\x6a\x67\xde\x7b\x2f\xf0\x48\x10\x6a\x1a\xc0\x2a\x82\x63\xe2\x89\x54\x14\xb0\xad\xaa\x00\xe3\xa1\xad\x0b\x73\x4a\xef\xfa\xc8\xbb\x83\x50\xf7\x81\xa1\x84\x88\x09\x42\xed\xff\x11\x18\x3a\x74\xfe\x6f\x53\x03\x43\x68\x42\x87\xae\x37\x8d\x21\xa6\x7b\x1e\xf9\x1a\x43\xe4\xa6\xef\xaf\x9b\xfe\x7e\x6b\x1a\x18\x2a\xb6\x4e\x96\x8f\xc1\x14\x6c\x13\xdc\x18\x03\x95\x00\x4d\x00\x08\x59\x68\x31\x94\xbc\x23\x41\xb6\x49\xa0\x01\x24\x87\x68\x0c\xdf\x1b\x9c\x11\xd4\xc6\x0a\x52\x0c\x40\x00\x3a\xd6\x35\xb7\x04\x86\x63\x2a\x06\xc5\xc7\x9e\xa5\x4d\x82\xfc\x42\x33\xaa\x06\x81\x6b\x36\x44\xc0\x51\x16\x82\x6c\xb0\xa6\x19\xbb\x66\x03\x4c\x92\x0c\xfc\x8a\x6f\xe0\x44\x19\x05\x87\xcc\xe8\xf3\x31\xbd\x2b\x1b\x7e\x3a\x9e\xf0\x8e\x71\x06\x6e\x40\x4c\x36\xc7\xfb\x96\xc9\x80\x6c\x04\xa2\x41\x36\xfb\xdb\xad\xd9\xd7\xdf\xba\x50\x9b\xfd\xe5\xc9\xf4\xd3\x47\xb3\x1f\xbe\x9b\xde\xf9\xe3\xcf\x66\x1f\xff\x61\xf6\xe0\x70\x7a\xf7\x59\x52\xd0\xd5\xf7\x81\x7a\xd5\x79\x72\x6e\xb2\x4d\x39\x28\x01\xe6\x82\x3c\x57\x90\xf3\x4a\x04\xe4\xa8\xae\xa3\x89\xac\x5a\x5a\x88\x6f\x17\x7a\xd7\x6c\x80\xe2\xb0\x37\x54\x74\x1c\x04\x1f\x99\x8c\x29\x75\x4c\x10\x34\x47\xb5\x28\x69\x47\xf0\x34\x0e\x28\xdb\xfa\x98\x59\x2f\x78\xa1\x06\x4c\x02\xc9\x24\x0b\x72\x8f\x0e\xff\xf9\xea\xf9\x8b\xd4\x48\x6d\xce\xbb\x2c\x13\x54\xe7\x4c\x57\x58\xf5\x4a\x85\xd5\x8c\xcc\x5c\xd7\xde\x06\xb3\xe1\xdf\x3c\x2c\x31\x19\x47\x7f\x7a\x36\xbd\x7b\xdf\x35\x19\xaf\x5e\x7e\x33\xbb\xfd\x24\xa9\xc9\x38\x0f\x08\xc5\x9e\xd3\x59\x09\x8c\x85\x8f\xdd\xca\x4c\x78\x25\x02\x05\x36\x5c\x1f\x0a\x02\xb5\x43\x0b\x19\x8a\x23\xd9\x1a\x34\xc9\xaf\x7e\x79\xc2\x20\x99\xef\x42\x65\xa8\x65\xc1\x8b\xd7\xba\xa9\xa5\x84\x8c\xc8\x6b\x57\x70\xdc\x2c\x78\xae\xc0\xe3\x95\x68\xf0\xc8\x3a\xc4\x64\xf5\x08\x52\x10\x52\xc2\xbb\x5b\x02\x8c\xa0\xca\x08\x4b\x71\x17\x8f\xbc\xc0\x14\xd2\xe8\x90\xae\x03\xd5\x11\xe6\xd6\xa2\x99\x61\xeb\x04\x9e\x34\x60\x55\xc7\xe5\xcb\xb4\x91\xbd\xf7\xef\xa3\xa7\xff\x98\x3e\xf8\x7e\xfa\xd7\x5b\xa9\x9d\xe2\x06\xd0\xe1\x01\x40\x93\xb2\xac\x75\x5c\xc6\x2b\xe0\x7a\xa5\xd8\xab\x5e\x02\x2f\x55\xf3\x66\x55\x86\x1a\x2e\x8a\x99\x81\x26\x01\x23\x80\x96\xd8\x99\x5f\x9c\x29\x89\x9d\x99\x8b\x38\x8b\x5b\xe0\x9a\x9a\x4c\xce\x74\xd9\x0c\x0d\x87\xed\xca\xcc\x78\xa5\xf4\x66\xc6\x99\x61\xd9\x67\x6b\x56\xcf\x36\xdf\x68\xc4\x99\x8c\x95\x61\x7f\xde\x3a\xf6\xb8\xe9\xd5\xcb\xc7\xb3\x7b\x3f\x65\x47\x75\xdb\xd2\xe0\x70\x52\x46\x60\xf3\x39\xaf\xb0\xed\x95\xa2\x1e\x3f\x45\x4d\xdb\xe9\x9e\x41\xd1\x15\x75\x08\xcd\xc4\x9b\xec\xd9\xd7\xdf\xce\x3e\xfe\x6f\x96\xa0\xd4\x16\x34\xb5\x32\x45\xa5\xfc\xfc\x56\xe8\xf2\x4a\xb5\xb3\x3e\x05\x8f\x17\x9a\x07\x90\x00\xf7\x68\x20\x29\x4c\x1f\xfe\x34\xfb\xe4\xf1\x9b\xdf\xde\x3a\x7a\xf2\xec\xf5\xc3\xdb\xae\x0f\xec\xfe\xf9\xea\xf0\x30\x43\x1c\xf9\xdc\xa4\x49\xb9\xa8\xb3\xe7\x13\x85\x45\xaf\xc7\xba\x9f\xed\x0a\xc4\x5e\x89\x00\xb1\x5f\xcd\xde\x8e\x93\x96\x74\x97\x2b\xc2\xe7\x2d\xe9\xaf\x55\x30\x88\x29\xcd\xc5\x8a\x30\xd7\x15\x56\xbc\x52\x1d\xd7\x9e\x38\x72\x75\x6b\x44\xb9\x4e\x76\xed\xf0\x8b\xe7\xd3\x17\x9f\x27\x85\x67\xcb\x21\xed\x3c\x29\x03\x2a\x17\xcc\x56\x60\xf4\x4a\x51\xf7\x76\xbe\x99\x3a\xdd\xed\x9c\x01\x90\xba\xaf\x98\x04\x6f\x2a\x18\x5b\x2a\x54\x08\xd8\xc4\xfb\xd6\x58\xde\xb3\x31\x34\x01\xc6\x49\x61\x35\xfd\xfc\x0e\xbd\xc7\xfb\xc3\xd1\xed\x7b\xd3\xc3\x3f\xbf\xf9\x2c\xce\x67\x6c\xcf\x7b\x5d\x04\x57\xe6\x0f\xc4\x39\x17\xfd\x7d\x6b\x5c\x06\xcc\xf1\x39\xaf\x00\xe8\x95\xa2\x02\x30\x6a\xda\x56\x86\xc6\xa0\x8a\x67\x41\xa4\xad\x41\x92\x18\x7f\x8f\xbf\x99\x3d\xfc\xd1\x45\xe1\x3b\x47\x2f\xef\x4d\xbf\xfc\xca\x7d\xf4\xfa\xf9\x67\xb3\xaf\x1e\x64\x02\x63\x5b\x21\x00\x41\x45\x17\x29\x23\x65\x02\x23\xc3\x79\x05\x46\xaf\x14\x1e\x8c\x81\x69\x2b\x12\x18\x0d\x8f\xb5\x74\x7b\x43\x17\x8f\x47\xff\xfa\xdd\xec\xfe\x17\x69\x20\x78\x1e\x90\x90\x50\xca\x00\x40\x1e\xdf\x15\xfc\xbc\x12\x01\xbf\xb9\x66\xad\xe5\x54\x6e\x8d\x37\xf5\x12\x80\xea\xf8\x60\xce\xc2\xcb\x5c\xc7\xd9\xdd\x4f\x5f\x1d\xfe\x3d\x3d\x54\x4a\x89\x93\x0a\x24\xa5\x5f\xa3\x8a\xb0\x3c\x8d\x15\x8c\xaf\x5b\x48\xdb\x44\x00\x83\xc4\xae\xe2\x9b\xdf\x7f\xf2\xfa\xc5\x63\x37\x0e\x32\x7d\x72\xe7\xf5\xc3\xdb\x49\xa3\x21\xdb\x5e\x7f\x3d\xda\x5d\x09\x70\xc6\x30\x5c\x61\xcc\x2b\x45\xc5\x58\x60\xb6\x4e\x37\x32\x82\xc0\x08\x62\x42\x53\xb9\x3f\x48\xb4\x8c\xb9\x89\x95\xee\x69\x40\x52\x40\xf5\xe6\x9d\x94\x00\x4b\x73\x5e\x2b\x18\x79\xa5\xa8\x30\x3a\x9e\xa8\xd3\x45\x10\x26\x0a\x01\xd9\x6f\x79\xa7\xbe\xd9\xdd\x77\xfa\x2b\x03\x92\x58\x8e\x2b\x3c\x79\xa5\xba\x2a\x72\xb2\x57\x45\x5c\x7c\xa6\x3a\x3c\x9b\x7d\xf9\x74\x76\xff\x7b\x17\x9f\xae\x03\x39\xbb\x95\xd8\x7b\xdc\x19\x6b\x0a\x01\xce\x23\x7a\xfc\x51\x1a\xb8\xf2\xf8\xae\x40\xeb\x95\xa2\x2e\x82\xfc\x49\x3b\xd9\x05\x71\xf1\x41\x1e\x1f\x77\x8b\x61\xb8\xdf\xff\xd9\xb3\x87\xa2\xc9\x64\x26\xcc\xcd\x8c\xb5\xf7\x3e\x50\x8f\x8d\x9e\xf3\xfa\x18\x20\x02\x03\xf0\xa0\xef\xcb\x36\xd2\x83\xa0\x89\x3a\x8d\xf7\xcf\xea\x81\xa2\xdb\x60\x49\x43\x46\x8d\x8f\x6d\xdc\xde\x84\xf8\x06\x7e\x93\x6b\x69\x18\x85\xcb\x31\x44\x10\x20\x90\x78\x7c\x81\x0b\x70\x4c\x3b\xde\x7d\xf5\xe8\xdb\xea\x7e\xaa\x06\xc0\x58\x19\x2d\x93\x1b\xb7\xa9\x06\x88\x02\xf5\x90\x81\x8b\x5e\x90\x22\x96\xa3\x08\xcd\xf7\xab\x14\x1f\xd2\xdc\x79\xa2\x80\xf1\x92\x42\x07\x2e\x2b\xa1\xb9\x0a\x68\x43\x0d\x98\xb6\xc1\x80\xa2\xb6\x2d\xf5\xfa\xdd\x8e\xd8\xf2\x9b\xf4\x7a\xb7\xbd\x2d\x76\x76\xfd\x8f\xfa\xbb\xfd\x81\xd4\x9e\xb3\xb7\xc0\x99\xcf\x42\x1e\x53\x0a\x73\x19\xf9\x45\x97\x1c\xea\xa5\x5a\x86\x61\x99\xc1\x39\x89\xf3\xdf\x68\x83\xf0\x12\xe0\x9f\x69\x88\x65\xfa\xb9\x9e\xa8\xa9\xde\xb3\x2c\x1d\x28\x66\x24\xbc\xbc\xea\x24\x33\x17\x9f\x21\x58\x08\xc1\x24\x60\x3e\xf4\xdd\x8f\xb2\x30\xce\xfa\x03\x45\xe7\xda\x82\x66\x76\x88\xd7\x59\x28\xef\xf4\x1b\xb1\x38\x76\x5e\xe7\xb1\xc0\x70\x9d\x4b\x60\x61\xf3\x1e\xbb\x2f\x26\xf4\x32\x32\xdf\xa8\xe3\x51\x62\x83\x1e\x2d\x5e\xc9\x50\xa0\x9e\x6f\x48\x26\x01\x66\xa4\xd5\x48\xc1\x0a\x37\x1b\xa1\x10\xda\xe9\xb7\x92\xe6\xd0\x72\x37\x77\x6b\x5a\x11\x17\x1f\x72\x73\xc4\xd0\x56\xa0\x99\x7a\x5d\x8c\x3d\xd2\x2c\xa2\x3c\x53\x90\x0c\x0d\x8c\xa6\xda\x24\x94\x0a\xff\x4b\x12\x45\x94\xc8\xc9\x68\xd8\x5c\x16\x8c\x08\x93\x2b\x59\x64\xf2\x41\x11\x25\x9a\x82\xe4\x22\x83\x2b\x85\x1c\x8a\xeb\xc8\x2c\x91\xc3\xca\x95\x8a\xc9\x35\xcd\xa8\x55\xbc\x5b\xfa\x65\x10\xe6\x8a\x95\xaa\x74\xca\xb4\xaa\xf1\x37\x71\xc3\xf5\xc9\xb2\x3b\x7e\x0d\x69\x4b\xdc\x69\x0d\xe4\xc1\xee\xb6\x24\x6f\x89\xad\xbe\xe4\xf7\x03\x99\xda\x41\x6f\x47\x8a\xf5\x0a\x39\xb4\xc2\x3c\xd3\xa0\xcd\xb9\xc9\xfc\x44\x30\xcf\x7c\xd1\x00\xa7\x7c\x95\x4d\x59\x5d\x26\x60\xda\xff\xf6\x75\xed\xa2\xd3\x8c\x3b\x63\x20\xe0\xea\x2d\xa3\xe8\xba\x86\x5c\x52\xc1\xa4\xa3\x65\xa4\xda\xd6\x1e\xd4\x81\x9b\x2c\xc4\x27\x78\x3d\x34\xd6\x0c\x1e\x24\x23\x83\x4c\x6a\xd3\xee\x9e\x6b\xb6\x24\x79\xfb\x42\xb7\xc3\x28\x8c\xd4\x16\x9b\xad\x58\x25\x61\x5a\x46\xb0\x36\xb0\xae\x02\x33\x57\xe8\x2c\x40\x20\x97\xa0\x72\x04\x4e\x2e\x37\xfc\xc2\xb9\x24\xf5\x9a\x5b\xbb\x72\xbd\xdb\x60\x64\x36\xe8\x5e\x94\x3a\xf1\x61\x93\xcb\x8d\x28\x51\xf9\x53\x0d\x72\x43\x89\xb0\x23\x5d\xa6\xad\xc7\xd2\x49\xaa\xab\xcb\x88\xf9\xec\x02\x97\xe4\x01\x40\x70\x38\x09\xa6\xbf\x26\x22\x7d\x89\x36\x8d\xde\x26\x72\x55\x66\xe9\xe0\x69\xa3\xc4\x9a\xc4\x64\xf0\x14\x6e\xa1\xf2\xc2\x34\xf2\x4a\xc1\xe3\x13\x7b\x8e\x01\xaf\xdc\x8e\xc6\x28\x52\x86\x91\xc6\xe7\x1c\xe4\x18\xb7\xff\x06\x69\xa6\x60\x7e\xe0\xc0\xd2\x2f\x02\x9a\x0c\xb4\x06\xba\x10\xcb\x8b\x8c\xa3\x13\x88\x91\x2e\x49\xd3\x29\x04\xca\x12\x70\xcf\xbd\x20\x5f\x50\xcd\xa1\xe9\x2b\xb2\xbd\x06\xca\x8e\xc8\x57\x13\x24\x5b\x92\x30\x52\x08\xb5\xf0\x83\x91\xc4\xa0\x25\xfb\x81\x56\x5a\x79\xfa\x9a\x9a\xe0\x06\x91\xd7\x37\xd3\x10\xcb\xd6\x01\x88\x3c\xfb\x5b\x87\x81\x60\x42\x61\x39\x14\x60\x1d\xe2\x58\x27\x5c\xe7\xf7\x1d\x65\x45\xd3\x32\x1d\xb6\xee\x03\x45\x27\xfb\xb2\xaa\x20\x4d\x36\x23\x23\x23\x71\x14\x38\x9f\xc8\x17\x56\xa3\xe1\x6b\x02\x0e\x51\x6e\xe4\x19\xaf\x8a\x80\x42\x80\x4c\xa0\x91\xe9\x30\xd9\xa6\x57\x1c\xd2\x35\x4f\x01\x80\x15\x2c\x2f\x2b\x0e\x47\xfb\xc6\xbe\xb8\x67\x94\x76\x37\xd2\x9d\x37\x0c\xec\x48\x52\x09\xa6\xa0\xcb\xc3\xca\xcd\x43\x8c\x50\x7c\xae\x73\x2e\x31\xf8\xbe\x8a\x91\x01\x02\x5c\x8f\x3f\x8b\xf2\xc7\x7e\x6b\x2d\xc7\x00\x57\xae\xa7\xf9\x62\x86\xfc\x70\x32\x63\x54\x4e\x42\x77\x62\xbf\x47\x58\x08\x54\x45\x73\xbf\x98\x98\x36\x20\x4a\x3e\xd5\x58\x8b\xcb\xe4\x6c\xd7\xc6\x59\xb0\x64\x8d\xe5\xb1\xae\x10\xa7\x93\x8c\xcd\x35\x40\xaf\xc3\xe5\x87\x23\xab\xfc\xd9\xae\x2a\xf4\x24\x71\xc0\x04\xd0\x76\xb6\x1b\x81\x27\x0d\xa9\x25\xb1\x4f\xc4\x9d\x46\x73\x10\x7f\xa7\xc1\xa5\x1b\xe6\x99\x9b\xbc\x52\x30\xff\x71\x35\x71\x61\x7e\x52\x55\xc1\x61\x1b\x4c\x8a\xc8\x33\x33\x18\x20\xd9\xbb\xe8\x9a\x1a\x26\x18\xdc\x58\xc7\x06\xee\x24\x97\xd1\x65\x87\x20\x89\xc4\xb0\x1e\x87\x1c\x6a\xb9\xf6\x1f\xf4\xf0\x1d\xd1\x1f\xe2\x5c\x43\xd0\xc2\x24\x8a\x4a\x32\x6f\xaf\x62\x6e\x9c\x66\x97\xd7\x38\x7c\xbe\x16\xcf\x50\x12\x80\x15\xc9\x20\x30\x1b\x5c\x1c\xbe\x81\x9f\x30\xe1\xcd\x69\x98\x52\x08\x6c\x5f\x19\xb6\x4e\xbc\x4f\x78\x66\x9f\x1c\x12\x15\x5c\x5f\xbe\x94\xf6\x77\xea\x75\xa9\xdf\x67\x0e\xf0\x7a\xbd\x6e\x8f\xbd\x0a\x28\xf5\xe4\x4e\x77\x20\x4b\xbf\x6e\xf6\x07\xa1\x9a\xd0\xd3\xb6\xd4\xab\x5f\x10\x3b\x03\x7e\x9b\x45\x6d\xa8\x46\xac\xd7\xbb\x3b\x71\x15\xd1\x3c\x6c\x5f\x6e\xd0\xda\xb6\x38\xa8\x5f\x08\xd5\xb6\xba\xe7\x9b\x1d\x5a\x2f\xb6\x5a\xdd\xcb\xa1\xfa\x86\xd4\x6a\x5e\x92\x7a\xbb\x72\xb3\xb3\xd5\x8d\xe8\x81\x7d\x87\xcb\xc9\xa0\x27\x76\xfa\x62\x7d\xd0\xec\x76\xe4\x2d\xb1\xd9\x92\x1a\xbc\x41\xb4\xba\xf5\x8b\xbc\xe7\xcd\xce\x25\xb1\xd5\x6c\x84\x3a\xae\x5f\x10\x7b\xe7\x25\xb9\xb7\xd3\x89\xaa\xe2\xcc\xa1\xbf\x7a\xd0\x13\x1b\x92\xdc\xe9\xca\x52\x7b\x7b\xb0\x1b\xeb\x00\xcd\x29\x85\x95\x2c\x2e\xe5\xa2\x60\x8e\x10\x77\xf9\x59\xb2\x77\xf2\x25\x2d\x25\x81\x5c\x6c\xd6\x50\x21\x6c\x63\x0c\xef\x51\xbf\x7c\x9b\x6f\x1a\x57\x74\x0f\x6f\x05\xdf\x36\x61\x16\x56\xef\x77\xc3\x52\x6e\xd0\xfd\xf9\x12\x11\x0b\x7e\xfa\xb3\xf2\xc5\xf5\x6c\x3e\xa7\x86\xd3\x63\xa6\xcd\x99\x4d\x64\x82\x14\x0d\x64\xf4\x8c\xac\xb1\x6c\xb0\xdb\xdd\x65\x23\x61\xb7\xc9\x19\x95\xae\x74\x68\x29\xe2\xa1\x01\xf7\x77\xf1\xe2\x67\x3e\x7e\xac\x4c\x10\x29\x8f\x8b\xb3\xfa\xb1\x2e\x7e\xe1\x24\x81\x0b\xcf\x25\x60\xd0\xb8\xa6\x9c\x79\x43\xa4\x20\x10\x42\x49\xf2\xc4\x30\xa0\xc9\x59\x09\xe8\xca\x1e\x88\xdc\x89\x65\xb6\xad\x4b\x8d\x27\xc4\x32\x3f\xb5\x35\x0e\x63\xec\x85\xc4\xa4\x6a\xf7\x96\x60\xcb\x1f\x6b\xad\x02\x09\xf3\x77\xde\xca\x40\xc2\xea\x8f\xc3\xbd\x00\x45\xd6\xe9\x29\x64\x0c\xa2\x50\xa7\xa0\x4c\xaa\x50\xc1\x8c\x4d\x56\x4b\x71\x6a\xa0\x5e\x8b\xba\x38\xba\xcb\x7e\x97\x3a\xd9\x5c\x2f\xa6\x8c\x40\xa2\xd3\x57\xbd\x1f\x6e\xf8\xf1\xf9\xd1\xa3\xdb\xde\x2f\x13\xf1\x15\xc2\xb7\xf3\xcb\xe5\x8a\xa6\x4b\xed\xf3\x8d\x39\x81\x72\x67\x3a\x95\xdb\x70\xfe\xbb\xb9\xf1\xbf\x00\x00\x00\xff\xff\x9b\xae\x8a\xea\xba\x88\x00\x00")

func proto_micro_mall_users_proto_users_users_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_users_proto_users_users_swagger_json,
		"proto/micro_mall_users_proto/users/users.swagger.json",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"proto/micro_mall_users_proto/users/users.swagger.json": proto_micro_mall_users_proto_users_users_swagger_json,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"proto": &_bintree_t{nil, map[string]*_bintree_t{
		"micro_mall_users_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"users": &_bintree_t{nil, map[string]*_bintree_t{
				"users.swagger.json": &_bintree_t{proto_micro_mall_users_proto_users_users_swagger_json, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
